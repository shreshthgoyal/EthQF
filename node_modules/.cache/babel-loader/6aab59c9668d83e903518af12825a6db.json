{"ast":null,"code":"var _jsxFileName = \"/home/shreshth/QF/src/pages/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport \"./Home.css\";\nimport Navbar from \"../../Components/Navbar/Navbar\";\nimport Footer from \"../../Components/Footer/Footer.js\";\nimport Features from \"../../Components/Features/Features.js\";\nimport Steps from \"../../Components/Steps/Steps.js\";\nimport Projects from \"../../Components/Projects/Projects.js\";\nimport Stats from \"../../Components/Stats/Stats.js\";\nimport Banner from \"../../Components/Banner/Banner.js\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoginGithub from 'react-login-github';\nimport React from 'react';\nimport axios from 'axios';\nimport { address, abi } from \"../../config\";\nimport Web3 from 'web3';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  let token = null;\n  const navigate = useNavigate();\n  const [matchingFund, setMatchingFund] = useState(0.000);\n  const [isMatchingRound, setIsMatchingRound] = useState(false);\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [contract, setContract] = useState();\n  const [web3Provider, setWeb3Provider] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [managerAddress, setManagerAddress] = useState();\n\n  const checkWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Install Metamask please!\");\n      return;\n    } else {\n      console.log(\"All set!\");\n    }\n\n    try {\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n\n      if (accounts.length !== 0) {\n        const account = accounts[0];\n        console.log(\"Account address : \", account);\n        setCurrentAccount(account);\n        await loadContract();\n      } else {\n        console.log(\"No account found\");\n      }\n    } catch (error) {\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const getMatchingFund = async () => {\n    if (contract) {\n      const res = await contract.methods.matchingFund().call();\n      const matchingStatus = await contract.methods.isMatchingRound().call();\n      const manAdd = await contract.methods.managerAdd().call();\n      await setMatchingFund(res);\n      await setCurrentAccount(currentAccount);\n      await setIsMatchingRound(matchingStatus);\n      await setManagerAddress(manAdd.toLowerCase());\n    }\n  };\n\n  const loadContract = async () => {\n    try {\n      let {\n        web3\n      } = window;\n\n      if (typeof web3 !== 'undefined') {\n        setWeb3Provider(web3.currentProvider);\n        web3 = new Web3(web3.currentProvider);\n      } else {\n        window.alert('Please connect to Metamask.');\n      }\n\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        window.web3 = new Web3(ethereum);\n\n        try {\n          // Request account access if needed\n          await ethereum.enable();\n        } catch (error) {// User denied account access...\n        }\n      } // Legacy dapp browsers...\n      else if (window.web3) {\n        setWeb3Provider(web3.currentProvider);\n        window.web3 = new Web3(web3.currentProvider);\n      } // Non-dapp browsers...\n      else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n      }\n\n      if (!contract) setContract(new web3.eth.Contract(abi, address));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    checkWalletIsConnected().then(getMatchingFund()).then(getProjects());\n    console.clear();\n  }, [contract]);\n\n  const getProjects = async () => {\n    if (contract) {\n      await contract.methods.getAllProjects().call().then(i => Object.entries(i)).then(i => setProjects(i));\n    }\n  };\n\n  const onSuccess = response => {\n    axios.get(`https://qfdone.herokuapp.com/authenticate/${response.code}`).then(res => res.data.token).then(_token => {\n      token = _token;\n      navigate('/form', {\n        state: token\n      });\n    }).catch(err => console.log(err));\n  };\n\n  const onFailure = res => console.error(res);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isMatchingRound: isMatchingRound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main hero\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero__container container container--px flex lp\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero__text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"hero__title\",\n            children: [\"We fund with the c\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hero__title-underline\",\n              children: \"ommunity.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 65\n            }, this), \" For the c\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hero__title-underline\",\n              children: \"ommunity.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 131\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hero__paragraph\",\n            children: [\"Going forward with the community. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 57\n            }, this), \" This is a platform which provides funding for projects through Quadratic funding.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(LoginGithub, {\n            clientId: \"0661798dd8b17b1f2412\",\n            onSuccess: onSuccess,\n            onFailure: onFailure,\n            scope: \"repo%20read:user\",\n            buttonText: \"List a Project\",\n            className: \"hero__cta cta cta--primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/projects\",\n            className: \"hero__cta cta cta--primary bt2\",\n            children: \"Fund a Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero__image-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://i.ibb.co/d4JCpLL/Untitled-design-2.png\",\n            alt: \"Ether Phone\",\n            className: \"hero__image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Features, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Projects, {\n        projects: projects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Steps, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Stats, {\n          title: \"Matching Pool\",\n          icon: \"fa fa-cube\",\n          color: \"\\t#76CBC1\",\n          number: parseInt(matchingFund) / 1000000000000000000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), currentAccount == managerAddress ? isMatchingRound ? /*#__PURE__*/_jsxDEV(Banner, {\n        contract: contract,\n        currentAccount: currentAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 68\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manager-message\",\n        children: \"Matching Round has not yet started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 134\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 211\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Home, \"6M7w2B4pceJVUp+EYVoFYltIrNg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/shreshth/QF/src/pages/Home/Home.js"],"names":["Navbar","Footer","Features","Steps","Projects","Stats","Banner","Link","useNavigate","LoginGithub","React","axios","address","abi","Web3","useState","useEffect","Home","token","navigate","matchingFund","setMatchingFund","isMatchingRound","setIsMatchingRound","currentAccount","setCurrentAccount","contract","setContract","web3Provider","setWeb3Provider","projects","setProjects","managerAddress","setManagerAddress","checkWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","loadContract","error","getMatchingFund","res","methods","call","matchingStatus","manAdd","managerAdd","toLowerCase","web3","currentProvider","alert","enable","eth","Contract","then","getProjects","clear","getAllProjects","i","Object","entries","onSuccess","response","get","code","data","_token","state","catch","err","onFailure","parseInt"],"mappings":"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","sourcesContent":["import \"./Home.css\";\nimport Navbar from \"../../Components/Navbar/Navbar\";\nimport Footer from \"../../Components/Footer/Footer.js\";\nimport Features from \"../../Components/Features/Features.js\";\nimport Steps from \"../../Components/Steps/Steps.js\";\nimport Projects from \"../../Components/Projects/Projects.js\";\nimport Stats from \"../../Components/Stats/Stats.js\";\nimport Banner from \"../../Components/Banner/Banner.js\";\nimport {Link} from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoginGithub from 'react-login-github';\nimport React from 'react';\nimport axios from 'axios';\nimport {address, abi} from \"../../config\";\nimport Web3 from 'web3';\nimport { useState, useEffect} from \"react\";\n\nconst Home = () => {\n\n\n  let token = null;\n  const navigate = useNavigate();\n  const [matchingFund, setMatchingFund] = useState(0.000);\n  const [isMatchingRound, setIsMatchingRound] = useState(false);\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [contract, setContract] = useState();\n  const [web3Provider, setWeb3Provider] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [managerAddress, setManagerAddress] = useState();\n\n\n\n  const checkWalletIsConnected = async () => {\n    const {ethereum} = window;\n    if(!ethereum){\n      console.log(\"Install Metamask please!\");\n      return;\n    }else{\n      console.log(\"All set!\");\n    }\n    try{\n      const accounts = await ethereum.request({method: 'eth_requestAccounts'});\n\n      if(accounts.length !== 0){\n        const account = accounts[0];\n        console.log(\"Account address : \", account);\n        setCurrentAccount(account)\n        await loadContract();\n        \n      }else{\n        console.log(\"No account found\");\n      }\n      \n    } catch(error){\n      console.log(\"Error : \", error);\n    }\n  }\n\n\n  const getMatchingFund = async () => {\n    if(contract)\n   { const res = await contract.methods.matchingFund().call();\n     const matchingStatus = await contract.methods.isMatchingRound().call();\n     const manAdd = await contract.methods.managerAdd().call();\n    await setMatchingFund(res);\n    await setCurrentAccount(currentAccount);\n    await setIsMatchingRound(matchingStatus);\n    await setManagerAddress(manAdd.toLowerCase());\n  }\n  }\n\n  const loadContract = async () => {\n    try{\n      let {web3} = window;\n      if (typeof web3 !== 'undefined') {\n         setWeb3Provider(web3.currentProvider);\n          web3 = new Web3(web3.currentProvider)\n      } else {\n        window.alert('Please connect to Metamask.')\n      }\n      const {ethereum} = window;\n\n      if (ethereum) {\n          window.web3 = new Web3(ethereum)\n          try {\n            // Request account access if needed\n            await ethereum.enable()\n          } catch (error) {\n            // User denied account access...\n          }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        setWeb3Provider(web3.currentProvider);\n        window.web3 = new Web3(web3.currentProvider)\n      }\n      // Non-dapp browsers...\n      else {\n        console.log(\n          'Non-Ethereum browser detected. You should consider trying MetaMask!',\n        )\n      }\n      if(!contract)\n      setContract(new web3.eth.Contract(abi, address))\n    }catch(error){\n       console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    checkWalletIsConnected().then(\n      getMatchingFund()\n      ).then(\n      getProjects()\n      )\n    console.clear();\n\n\n      }, [contract]);\n      \n\n      const getProjects = async () => {\n        if(contract)\n        { \n         await contract.methods.getAllProjects().call().then(i =>Object.entries(i)).then(i => setProjects(i));\n        }\n     }\n\n  const onSuccess = response => {\n    axios.get(`https://qfdone.herokuapp.com/authenticate/${response.code}`)\n      .then(res => res.data.token)\n      .then(_token => {\n        token = _token;\n        navigate('/form', {state : token})\n      })\n      .catch(err => console.log(err));};\n\n    const onFailure = res => console.error(res);\n\n      return (\n     \n          <div>\n            <Navbar isMatchingRound={isMatchingRound}/>\n          <main className=\"main hero\">\n              <div className=\"hero__container container container--px flex lp\">\n                <div className=\"hero__text\">\n                  <h1 className=\"hero__title\">We fund with the c<span className=\"hero__title-underline\">ommunity.</span> For the c<span className=\"hero__title-underline\">ommunity.</span></h1>\n                  <p className=\"hero__paragraph\">\n                      Going forward with the community. <br /> This is a platform which provides funding for projects through Quadratic funding.\n                  </p>\n                  <LoginGithub clientId=\"0661798dd8b17b1f2412\"\n              onSuccess={onSuccess}\n              onFailure={onFailure}\n              scope= \"repo%20read:user\"\n              buttonText= \"List a Project\"\n              className=\"hero__cta cta cta--primary\" />\n                  <Link to=\"/projects\" className=\"hero__cta cta cta--primary bt2\">Fund a Project</Link>\n                </div>\n                <div className=\"hero__image-wrapper\">\n                  <img src=\"https://i.ibb.co/d4JCpLL/Untitled-design-2.png\" alt=\"Ether Phone\" className=\"hero__image\" />\n                </div>\n              </div>\n          <Features />\n          <Projects projects={projects} />\n          <Steps />\n          <div id=\"wrapper\">\n              <Stats title=\"Matching Pool\" icon=\"fa fa-cube\" color=\"\t#76CBC1\" number={parseInt(matchingFund)/1000000000000000000}/>\n          </div>\n          {(currentAccount == managerAddress) ? (isMatchingRound ? <Banner contract={contract} currentAccount = {currentAccount}/> : <div className=\"manager-message\">Matching Round has not yet started</div>) : <div></div> }\n          \n          <Footer />\n          </main>\n          </div>\n      )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}