{"ast":null,"code":"var _jsxFileName = \"/home/shreshth/QF/src/pages/ProjectForm/ProjectForm.js\",\n    _s = $RefreshSig$();\n\nimport './ProjectForm.css';\nimport Navbar from \"../../Components/Navbar/Navbar\";\nimport Footer from \"../../Components/Footer/Footer.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectForm = _ref => {\n  _s();\n\n  let {\n    contract,\n    currentAccount\n  } = _ref;\n  const location = useLocation();\n  const temp_code = location.state;\n  const [userName, setUserName] = useState(\"\");\n  const [pitch, setPitch] = useState(\"\");\n  const [verified, setVerified] = useState(false);\n  const [val, setPro] = useState(\"\");\n  const [userRepo, setRepo] = useState([\"\"]);\n  const [category, setCat] = useState([\"\"]);\n  const [totalRepo, setVal] = useState();\n  const categories = [\"DeFi\", \"NFT\", \"Gaming\", \"Wallet\", \"Education\"];\n\n  const onChange = () => {\n    setVerified(true);\n  };\n\n  const addMessage = newMessage => setRepo(state => [...state, newMessage]);\n\n  const getData = async () => {\n    const users = await axios({\n      url: 'https://api.github.com/user',\n      method: 'get',\n      headers: {\n        Authorization: `token ${temp_code}`\n      }\n    });\n    setUserName(users.data.login);\n    setVal(users.data.public_repos);\n    return [userName];\n  };\n\n  const getProject = async () => {\n    if (userName.length > 0) {\n      const repos = await axios({\n        url: `https://api.github.com/users/${userName}/repos`,\n        method: 'get',\n        headers: {\n          Authorization: `token ${temp_code}`\n        }\n      });\n      repos.data.forEach(i => addMessage(i.name));\n    }\n  };\n\n  React.useEffect(() => {\n    getData();\n    getProject();\n    return setRepo([]);\n  }, [userName, verified]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containero\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lefto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headero\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"animation a1\",\n            children: \"Welcome Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"animation a2\",\n            children: \"Log in to your account using email and password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-field animation a3\",\n            placeholder: userName,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-field animation a4 project\",\n            onChange: e => {\n              setPro(e.target.value);\n            },\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: val !== \"\" ? val : \"Choose Your Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 7\n            }, this), userRepo.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item,\n                children: item\n              }, item, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-field animation a3\",\n            placeholder: val != \"\" ? `https://github.com/${userName}/${val}` : \"Open Source URL\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-field animation a3\",\n            placeholder: \"Pitch\",\n            onChange: e => setPitch(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-field animation a4 project\",\n            onChange: e => setCat(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Choose Project Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 7\n            }, this), categories.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item,\n                children: item\n              }, item, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n            sitekey: \"6Lf_B0QeAAAAACfFq7XiF_2J96rDJbMQClzXklgB\",\n            onChange: onChange,\n            className: \"animation a3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this), verified ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"animation a3 show\",\n            type: \"submit\",\n            id: \"fb\",\n            onClick: () => {\n              contract.methods.listProject(val, pitch, val !== \"\" ? userName : \"\", category).send({\n                from: currentAccount\n              });\n            },\n            children: \"List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"righto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectForm, \"v9WJ0VncVP840EA8S3bpZbikl3w=\", false, function () {\n  return [useLocation];\n});\n\n_c = ProjectForm;\nexport default ProjectForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"sources":["/home/shreshth/QF/src/pages/ProjectForm/ProjectForm.js"],"names":["Navbar","Footer","React","useState","axios","useLocation","ReCAPTCHA","ProjectForm","contract","currentAccount","location","temp_code","state","userName","setUserName","pitch","setPitch","verified","setVerified","val","setPro","userRepo","setRepo","category","setCat","totalRepo","setVal","categories","onChange","addMessage","newMessage","getData","users","url","method","headers","Authorization","data","login","public_repos","getProject","length","repos","forEach","i","name","useEffect","e","target","value","map","item","methods","listProject","send","from"],"mappings":"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","sourcesContent":["import './ProjectForm.css';\nimport Navbar from \"../../Components/Navbar/Navbar\";\nimport Footer from \"../../Components/Footer/Footer.js\";\nimport React, { useState }  from 'react';\nimport axios from 'axios';\nimport {useLocation} from 'react-router-dom';\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nconst ProjectForm = ({contract, currentAccount}) => {\n\n  const location = useLocation();\n  const temp_code = location.state;\n\n  const [userName, setUserName] = useState(\"\");\n  const [pitch, setPitch] = useState(\"\");\n  const [verified, setVerified] = useState(false);\n  const [val, setPro] = useState(\"\");\n  const [userRepo, setRepo] = useState([\"\"]);\n  const [category, setCat] = useState([\"\"]);\n  const [totalRepo, setVal] = useState();\n  const categories=[\"DeFi\", \"NFT\", \"Gaming\", \"Wallet\", \"Education\"];\n\n  const onChange = () => {\n    setVerified(true);\n  }\n  const addMessage = (newMessage) => setRepo(state => [...state, newMessage])\n\n \n  const getData = async () => {\n    const users = await axios({\n      url: 'https://api.github.com/user',\n      method: 'get',\n      headers: {\n        Authorization: `token ${temp_code}`,\n      },\n    });\n    setUserName(users.data.login)\n    setVal(users.data.public_repos)\n    return [userName];\n   };\n\n   const getProject = async () => {\n     if(userName.length > 0 )\n   { const repos = await axios({\n        url: `https://api.github.com/users/${userName}/repos`,\n        method: 'get',\n        headers: {\n          Authorization: `token ${temp_code}`,\n        },\n      })\n      repos.data.forEach(i => addMessage(i.name) )}\n   };\n\n   React.useEffect( ()=> {\n     getData();\n   getProject();\n   return ( setRepo([]))\n    }, [userName, verified])\n    \n    return (\n        <div>\n  <Navbar />\n  <div className=\"containero\">  \n  <div className=\"lefto\">\n    <div className=\"headero\">\n      <h2 className=\"animation a1\">Welcome Back</h2>\n      <h4 className=\"animation a2\">Log in to your account using email and password</h4>\n    </div>\n    <div className=\"form\">\n      <input type=\"text\" className=\"form-field animation a3\" placeholder= {userName} disabled/>\n      <select className=\"form-field animation a4 project\" onChange={(e) => {setPro(e.target.value); }} required>\n      <option value= \"\">{val !== \"\" ? val : \"Choose Your Project\"}</option>\n        {\n          userRepo.map(item => {\n            return (<option key={item} value={item}>{item}</option>);\n        })\n        }\n      </select>   \n      <input type=\"text\" className=\"form-field animation a3\" placeholder= {(val != \"\") ? `https://github.com/${userName}/${val}` : \"Open Source URL\"} disabled/>\n      <input type=\"text\" className=\"form-field animation a3\" placeholder= \"Pitch\" onChange={(e) => setPitch(e.target.value)} required/>\n      <select className=\"form-field animation a4 project\" onChange={(e) => setCat(e.target.value)} required>\n      <option value= \"\">Choose Project Category</option>\n        {\n          categories.map(item => {\n            return (<option key={item} value={item}>{item}</option>);\n        })\n        }\n      </select>   \n      <br />\n      <ReCAPTCHA\n    sitekey=\"6Lf_B0QeAAAAACfFq7XiF_2J96rDJbMQClzXklgB\"\n    onChange={onChange}\n    className=\"animation a3\"\n  />\n      {verified ? <button className=\"animation a3 show\" type=\"submit\" id=\"fb\" onClick={() => {\n      contract.methods.listProject(val, pitch, (val !== \"\") ? userName : \"\", category).send({from : currentAccount}); \n      }} >\n        List</button>:null}\n    </div>\n  </div>\n  <div className=\"righto\"></div>\n</div>\n  <Footer />\n  </div>\n    )\n}\n\nexport default ProjectForm;"]},"metadata":{},"sourceType":"module"}