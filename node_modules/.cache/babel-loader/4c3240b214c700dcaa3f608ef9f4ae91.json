{"ast":null,"code":"var _jsxFileName = \"/home/shreshth/QF/src/Components/Banner/Banner.js\",\n    _s = $RefreshSig$();\n\nimport \"./Banner.css\";\nimport { useState, useEffect } from 'react';\nimport { address } from '../../config';\nimport { ToastsContainer, ToastsStore } from 'react-toasts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Banner = _ref => {\n  _s();\n\n  let {\n    contract,\n    currentAccount\n  } = _ref;\n  const [projects, setProjects] = useState([]);\n\n  const getProjects = async () => {\n    if (contract) {\n      const res = await contract.methods.getAllProjects().call();\n      await setProjects(res);\n    }\n  };\n\n  const sendMatchingShares = async () => {\n    console.log(projects); // const res = await contract.methods.getBalance().call();\n    // console.log(res);\n\n    projects.forEach(async project => {\n      console.log(project);\n      const response = await contract.methods.clrMatching().send({\n        from: currentAccount\n      });\n      console.log(response);\n    });\n  };\n\n  const getBalance = async () => {\n    let res = await contract.methods.getBalance().call();\n    res /= 1000000000000000000;\n    ToastsStore.success(`Current contract balance : ${res} ETH`);\n  };\n\n  useEffect(() => {\n    getProjects();\n  }, [contract]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"features\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"features__container container container--px\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arch_iv\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMatchingShares,\n          className: \"hero__cta cta arch\",\n          children: \"CLR Matching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getBalance,\n          className: \"hero__cta cta arch\",\n          children: \"Get Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ToastsContainer, {\n      store: ToastsStore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Banner, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["/home/shreshth/QF/src/Components/Banner/Banner.js"],"names":["useState","useEffect","address","ToastsContainer","ToastsStore","Banner","contract","currentAccount","projects","setProjects","getProjects","res","methods","getAllProjects","call","sendMatchingShares","console","log","forEach","project","response","clrMatching","send","from","getBalance","success"],"mappings":";;;AAAA,OAAO,cAAP;AACA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,SAAQC,eAAR,EAAyBC,WAAzB,QAA2C,cAA3C;;;AAEA,MAAMC,MAAM,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAA+B;AAC7C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,WAAW,GAAG,YAAY;AAC9B,QAAGJ,QAAH,EAAY;AACV,YAAMK,GAAG,GAAG,MAAML,QAAQ,CAACM,OAAT,CAAiBC,cAAjB,GAAkCC,IAAlC,EAAlB;AACA,YAAML,WAAW,CAACE,GAAD,CAAjB;AACD;AAEH,GANA;;AASD,QAAMI,kBAAkB,GAAG,YAAY;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ,EADoC,CAEpC;AACA;;AACAA,IAAAA,QAAQ,CAACU,OAAT,CAAiB,MAAOC,OAAP,IAAmB;AAClCH,MAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACE,YAAMC,QAAQ,GAAG,MAAMd,QAAQ,CAACM,OAAT,CAAiBS,WAAjB,GAA+BC,IAA/B,CAAoC;AAACC,QAAAA,IAAI,EAAEhB;AAAP,OAApC,CAAvB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AAGH,KAND;AAOF,GAXD;;AAcA,QAAMI,UAAU,GAAG,YAAY;AAC9B,QAAIb,GAAG,GAAG,MAAML,QAAQ,CAACM,OAAT,CAAiBY,UAAjB,GAA8BV,IAA9B,EAAhB;AACAH,IAAAA,GAAG,IAAI,mBAAP;AACAP,IAAAA,WAAW,CAACqB,OAAZ,CAAqB,8BAA6Bd,GAAI,MAAtD;AACA,GAJD;;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACbS,IAAAA,WAAW;AACb,GAFQ,EAEN,CAACJ,QAAD,CAFM,CAAT;AAIG,sBACI;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA,4BACJ;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA,6BAKE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCAEA;AAAQ,UAAA,OAAO,EAAES,kBAAjB;AAAqC,UAAA,SAAS,EAAC,oBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA;AAAQ,UAAA,OAAO,EAAES,UAAjB;AAA6B,UAAA,SAAS,EAAC,oBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YADI,eAcJ,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAEpB;AAAxB;AAAA;AAAA;AAAA;AAAA,YAdI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAtDD;;GAAMC,M;;KAAAA,M;AAwDN,eAAeA,MAAf","sourcesContent":["import \"./Banner.css\";\nimport {useState, useEffect} from 'react';\nimport {address} from '../../config';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\n\nconst Banner = ({contract, currentAccount}) => {\n  const [projects, setProjects] = useState([]);\n\n  const getProjects = async () => {\n    if(contract){\n      const res = await contract.methods.getAllProjects().call();\n      await setProjects(res);\n    }\n\n }\n \n\n const sendMatchingShares = async () => {\n    console.log(projects);\n    // const res = await contract.methods.getBalance().call();\n    // console.log(res);\n    projects.forEach(async (project) => {\n      console.log(project);\n        const response = await contract.methods.clrMatching().send({from: currentAccount});\n        console.log(response);\n        \n        \n    })\n }\n \n\n const getBalance = async () => {\n  let res = await contract.methods.getBalance().call();\n  res /= 1000000000000000000;\n  ToastsStore.success(`Current contract balance : ${res} ETH`);\n }\n\n useEffect(() => {\n    getProjects()\n }, [contract]);\n \n    return (\n        <section className=\"features\" >\n    <div className=\"features__container container container--px\" >\n      {/* <div className=\"features__text\" >\n        <h1 className=\"features__subtitle subtitle-primary\" >Archive</h1>\n        <h2 className=\"features__title title-primary\">View previous matching round histories</h2>\n      </div> */}\n      <div className=\"arch_iv\">\n      {/* <a href=\"#\" className=\"hero__cta cta arch\">View archive</a><br></br><br></br> */}\n      <button onClick={sendMatchingShares} className=\"hero__cta cta arch\">CLR Matching</button>\n      <br />\n      <br />\n      <button onClick={getBalance} className=\"hero__cta cta arch\">Get Balance</button>\n      </div>\n    </div>\n    <ToastsContainer store={ToastsStore}/>\n  </section>\n    )\n}\n\nexport default Banner;"]},"metadata":{},"sourceType":"module"}