{"ast":null,"code":"var _jsxFileName = \"/home/shreshth/QF/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home/Home\";\nimport ProjectForm from \"./pages/ProjectForm/ProjectForm\";\nimport ProjectListing from \"./pages/ProjectListing/ProjectListing\";\nimport Sponsors from \"./pages/Sponsors/Sponsors\";\nimport ProjectDescription from \"./pages/ProjectDescription/ProjectDescription\";\nimport { address, abi } from \"./config\";\nimport Web3 from 'web3';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [web3Provider, setWeb3Provider] = useState(null);\n\n  const checkWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Install Metamask please!\");\n      return;\n    } else {\n      console.log(\"All set!\");\n    }\n\n    try {\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n\n      if (accounts.length !== 0) {\n        const account = accounts[0];\n        console.log(\"Account address : \", account);\n        setCurrentAccount(account);\n        loadContract();\n      } else {\n        console.log(\"No account found\");\n      }\n    } catch (error) {\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const loadContract = async () => {\n    try {\n      let {\n        web3\n      } = window;\n\n      if (typeof web3 !== 'undefined') {\n        setWeb3Provider(web3.currentProvider);\n        web3 = new Web3(web3.currentProvider);\n      } else {\n        window.alert('Please connect to Metamask.');\n      }\n\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        window.web3 = new Web3(ethereum);\n\n        try {\n          // Request account access if needed\n          await ethereum.enable();\n        } catch (error) {// User denied account access...\n        }\n      } // Legacy dapp browsers...\n      else if (window.web3) {\n        setWeb3Provider(web3.currentProvider);\n        window.web3 = new Web3(web3.currentProvider);\n      } // Non-dapp browsers...\n      else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n      }\n\n      setContract(new web3.eth.Contract(abi, address));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    checkWalletIsConnected();\n  }, [currentAccount]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/form\",\n          element: /*#__PURE__*/_jsxDEV(ProjectForm, {\n            contract: contract,\n            currentAccount: currentAccount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/projects\",\n          element: /*#__PURE__*/_jsxDEV(ProjectListing, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sponsor\",\n          element: /*#__PURE__*/_jsxDEV(Sponsors, {\n            contract: contract,\n            currentAccount: currentAccount,\n            address: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/projects\",\n          element: /*#__PURE__*/_jsxDEV(ProjectListing, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/description/:id\",\n          element: /*#__PURE__*/_jsxDEV(ProjectDescription, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/description/:id/:fund\",\n          element: /*#__PURE__*/_jsxDEV(ProjectDescription, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"dcXUZPVxu2f5DdP6Io9EQLTBYeQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/shreshth/QF/src/App.js"],"names":["React","BrowserRouter","Router","Routes","Route","Home","ProjectForm","ProjectListing","Sponsors","ProjectDescription","address","abi","Web3","useState","useEffect","App","currentAccount","setCurrentAccount","contract","setContract","web3Provider","setWeb3Provider","checkWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","loadContract","error","web3","currentProvider","alert","enable","eth","Contract"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home/Home\";\nimport ProjectForm from \"./pages/ProjectForm/ProjectForm\";\nimport ProjectListing from \"./pages/ProjectListing/ProjectListing\";\nimport Sponsors from \"./pages/Sponsors/Sponsors\";\n\nimport ProjectDescription from \"./pages/ProjectDescription/ProjectDescription\";\nimport {address, abi} from \"./config\";\nimport Web3 from 'web3';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [web3Provider, setWeb3Provider] = useState(null);\n\n  const checkWalletIsConnected = async () => {\n    const {ethereum} = window;\n    if(!ethereum){\n      console.log(\"Install Metamask please!\");\n      return;\n    }else{\n      console.log(\"All set!\");\n    }\n    try{\n      const accounts = await ethereum.request({method: 'eth_requestAccounts'});\n\n      if(accounts.length !== 0){\n        const account = accounts[0];\n        console.log(\"Account address : \", account);\n        setCurrentAccount(account);\n        loadContract();\n      }else{\n        console.log(\"No account found\");\n      }\n      \n    } catch(error){\n      console.log(\"Error : \", error);\n    }\n  }\n\n  const loadContract = async () => {\n    try{\n      let {web3} = window;\n      if (typeof web3 !== 'undefined') {\n         setWeb3Provider(web3.currentProvider);\n          web3 = new Web3(web3.currentProvider)\n      } else {\n        window.alert('Please connect to Metamask.')\n      }\n      const {ethereum} = window;\n\n      if (ethereum) {\n          window.web3 = new Web3(ethereum)\n          try {\n            // Request account access if needed\n            await ethereum.enable()\n          } catch (error) {\n            // User denied account access...\n          }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        setWeb3Provider(web3.currentProvider);\n        window.web3 = new Web3(web3.currentProvider)\n      }\n      // Non-dapp browsers...\n      else {\n        console.log(\n          'Non-Ethereum browser detected. You should consider trying MetaMask!',\n        )\n      }\n\n      setContract(new web3.eth.Contract(abi, address));\n    }catch(error){\n       console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    checkWalletIsConnected();\n    \n  }, [currentAccount])\n    return (\n      <Router>\n        <div className=\"App\">\n          <Routes>\n            <Route exact path=\"/\" element={<Home />}></Route>\n            <Route exact path=\"/form\" element={<ProjectForm  contract= {contract} currentAccount = {currentAccount} />}></Route>\n            <Route path=\"/projects\" element={<ProjectListing />}></Route>\n            <Route\n              path=\"/sponsor\"\n              element={<Sponsors contract={contract} currentAccount = {currentAccount} address = {address} />}\n            ></Route>\n            <Route path=\"/projects\" element={<ProjectListing />}></Route>\n            <Route\n              path=\"/description/:id\"\n              element={<ProjectDescription />}\n            ></Route>\n             <Route\n              path=\"/description/:id/:fund\"\n              element={<ProjectDescription />}\n            ></Route>\n          </Routes>\n        </div>\n      </Router>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}