{"ast":null,"code":"var _jsxFileName = \"/home/shreshth/QF/src/pages/Sponsors/Sponsors.js\",\n    _s = $RefreshSig$();\n\nimport \"./Sponsors.css\";\nimport Footer from \"../../Components/Footer/Footer\";\nimport Navbar from \"../../Components/Navbar/Navbar\";\nimport CountTo from 'react-count-to';\nimport { useState, useEffect, useRef } from 'react';\nimport { abi, address } from '../../config';\nimport Web3 from 'web3';\nimport { ToastsContainer, ToastsStore } from 'react-toasts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst web3 = new Web3();\n\nconst Sponsors = () => {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [web3Provider, setWeb3Provider] = useState(null);\n  const [matchingFund, setMatchingFund] = useState(0.000);\n  const [sponsors, setSponsors] = useState([]);\n  let arr = [];\n\n  const checkWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Install Metamask please!\");\n      return;\n    } else {\n      console.log(\"All set!\");\n    }\n\n    try {\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n\n      if (accounts.length !== 0) {\n        const account = accounts[0];\n        console.log(\"Account address : \", account);\n        setCurrentAccount(account);\n        loadContract();\n      } else {\n        console.log(\"No account found\");\n      }\n    } catch (error) {\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const loadContract = async () => {\n    try {\n      let {\n        web3\n      } = window;\n\n      if (typeof web3 !== 'undefined') {\n        setWeb3Provider(web3.currentProvider);\n        web3 = new Web3(web3.currentProvider);\n      } else {\n        window.alert('Please connect to Metamask.');\n      }\n\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        window.web3 = new Web3(ethereum);\n\n        try {\n          // Request account access if needed\n          await ethereum.enable();\n        } catch (error) {// User denied account access...\n        }\n      } // Legacy dapp browsers...\n      else if (window.web3) {\n        setWeb3Provider(web3.currentProvider);\n        window.web3 = new Web3(web3.currentProvider);\n      } // Non-dapp browsers...\n      else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n      }\n\n      if (!contract) setContract(new web3.eth.Contract(abi, address));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getAmount = () => {\n    val = prompt(\"Enter amount of ethers you want to contribute :\");\n  };\n\n  const getMatchingFund = async () => {\n    if (contract) {\n      const res = await contract.methods.matchingFund().call();\n      await setMatchingFund(res);\n    }\n  };\n\n  const getSponsorsList = async () => {\n    if (contract) {\n      const res = await contract.methods.getAllSponsors().call();\n      await setSponsors(...sponsors, res);\n    }\n  }; // const getDonations =   () => {\n  //   if(contract)\n  //   {\n  //     Object.values(sponsors).map(async(sponsor) => {\n  //     console.log(contract)\n  //       let res =  await contract.methods.sponsorToDonation(sponsor).call();\n  //   })}\n  // }\n\n\n  let val = 0;\n  useEffect(() => {\n    checkWalletIsConnected().then(() => {\n      getMatchingFund();\n      getSponsorsList();\n    });\n  }, [contract, currentAccount]);\n\n  const donateEth = async () => {\n    await getAmount();\n\n    if (val < 5) {\n      ToastsStore.warning(\"Contribute more than 5 ethers to be a Sponsor!\");\n      return;\n    }\n\n    await contract.methods.donateToMatchingFund().send({\n      from: currentAccount,\n      to: address,\n      value: web3.utils.toWei(val >= 5 ? val : \"0\", \"ether\"),\n      gas: 6721950\n    });\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"features s\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"features__container container container--px\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"features__text sponsors\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"features__subtitle subtitle-primary\",\n            children: \"Sponsor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"features__title title-primary\",\n            children: \"Matching Pool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"features__paragraph\",\n            children: [\"Contribute to the model of funding public goods where a fund from governments or philanthropic institutions matches individual contributions to a project. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 164\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 169\n            }, this), \"Matching round starts automatically as soon as matching pool hits 15 ETH.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"features__wrapper sponsors\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"features__feature feature--1\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Sponsors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 11\n            }, this), Object.values(sponsors).map(sponsor => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: sponsor\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 40\n                }, this)\n              }, sponsor, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"feature__title stat\",\n              children: /*#__PURE__*/_jsxDEV(CountTo, {\n                to: parseFloat(matchingFund) / 1000000000000000000,\n                speed: 1000,\n                digits: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"features__paragraph u\",\n              children: \"Ethers funded till date to matching pool.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"hero__cta cta arch spo\",\n              onClick: donateEth,\n              children: \"Become a sponsor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastsContainer, {\n      store: ToastsStore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sponsors, \"aMXyJ4avqOFej8VJNGQfysKPK3w=\");\n\n_c = Sponsors;\nexport default Sponsors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sponsors\");","map":{"version":3,"sources":["/home/shreshth/QF/src/pages/Sponsors/Sponsors.js"],"names":["Footer","Navbar","CountTo","useState","useEffect","useRef","abi","address","Web3","ToastsContainer","ToastsStore","web3","Sponsors","currentAccount","setCurrentAccount","contract","setContract","web3Provider","setWeb3Provider","matchingFund","setMatchingFund","sponsors","setSponsors","arr","checkWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","loadContract","error","currentProvider","alert","enable","eth","Contract","getAmount","val","prompt","getMatchingFund","res","methods","call","getSponsorsList","getAllSponsors","then","donateEth","warning","donateToMatchingFund","send","from","to","value","utils","toWei","gas","location","reload","Object","values","map","sponsor","parseFloat"],"mappings":"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","sourcesContent":["import \"./Sponsors.css\";\nimport Footer from \"../../Components/Footer/Footer\";\nimport Navbar from \"../../Components/Navbar/Navbar\";\nimport CountTo from 'react-count-to';\nimport {useState, useEffect, useRef} from 'react';\nimport {abi, address} from '../../config';\nimport Web3 from 'web3';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\n\n\nconst web3 = new Web3();\n\nconst Sponsors = () => {\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [web3Provider, setWeb3Provider] = useState(null);\n  const [matchingFund, setMatchingFund] = useState(0.000);\n  const [sponsors, setSponsors] = useState([]);\n  let arr = [];\n  const checkWalletIsConnected = async () => {\n    const {ethereum} = window;\n    if(!ethereum){\n      console.log(\"Install Metamask please!\");\n      return;\n    }else{\n      console.log(\"All set!\");\n    }\n    try{\n      const accounts = await ethereum.request({method: 'eth_requestAccounts'});\n\n      if(accounts.length !== 0){\n        const account = accounts[0];\n        console.log(\"Account address : \", account);\n        setCurrentAccount(account);\n        loadContract();\n      }else{\n        console.log(\"No account found\");\n      }\n      \n    } catch(error){\n      console.log(\"Error : \", error);\n    }\n  }\n\n  const loadContract = async () => {\n    try{\n      let {web3} = window;\n      if (typeof web3 !== 'undefined') {\n         setWeb3Provider(web3.currentProvider);\n          web3 = new Web3(web3.currentProvider)\n      } else {\n        window.alert('Please connect to Metamask.')\n      }\n      const {ethereum} = window;\n\n      if (ethereum) {\n          window.web3 = new Web3(ethereum)\n          try {\n            // Request account access if needed\n            await ethereum.enable()\n          } catch (error) {\n            // User denied account access...\n          }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        setWeb3Provider(web3.currentProvider);\n        window.web3 = new Web3(web3.currentProvider)\n\n      }\n      // Non-dapp browsers...\n      else {\n        console.log(\n          'Non-Ethereum browser detected. You should consider trying MetaMask!',\n        )\n      }\n      if(!contract)\n      setContract(new web3.eth.Contract(abi, address));\n    }catch(error){\n       console.log(error);\n    }\n  }\n\n  const getAmount =  () => {\n    val = prompt(\"Enter amount of ethers you want to contribute :\");\n }\n\n  const getMatchingFund = async () => {\n    if(contract)\n   { const res = await contract.methods.matchingFund().call();\n    await setMatchingFund(res);\n  }\n  }\n\n  const getSponsorsList = async () => {\n    if(contract)\n    {\n      const res = await contract.methods.getAllSponsors().call()\n       await setSponsors(...sponsors, res)\n\n    }\n  }\n\n  // const getDonations =   () => {\n\n  //   if(contract)\n  //   {\n  //     Object.values(sponsors).map(async(sponsor) => {\n  //     console.log(contract)\n\n  //       let res =  await contract.methods.sponsorToDonation(sponsor).call();\n  //   })}\n  // }\n\n  let val = 0;\n  useEffect(() => {\n    checkWalletIsConnected()\n    .then(() => {\n    getMatchingFund()\n    getSponsorsList()\n  })\n  }, [contract, currentAccount]);\n\n  const donateEth = async () => {\n   await getAmount();\n   if(val < 5) \n   { \n     ToastsStore.warning(\"Contribute more than 5 ethers to be a Sponsor!\");\n     return;\n   }\n   await contract.methods.donateToMatchingFund().send({from : currentAccount, to:address, value: web3.utils.toWei(val >= 5 ? val : \"0\", \"ether\"), gas: 6721950 });   \n    window.location.reload();\n  }\n\n    return (\n        <div>\n            <Navbar />\n             <section className=\"features s\" >\n    <div className=\"features__container container container--px\" >\n      <div className=\"features__text sponsors\" >\n        <h1 className=\"features__subtitle subtitle-primary\" >Sponsor</h1>\n        <h2 className=\"features__title title-primary\">Matching Pool</h2>\n        <p className=\"features__paragraph\">\n        Contribute to the model of funding public goods where a fund from governments or philanthropic institutions matches individual contributions to a project. <br/><br/>\n        Matching round starts automatically as soon as matching pool hits 15 ETH.\n        </p>\n      </div>\n\n      <div className=\"features__wrapper sponsors\">\n        <div className=\"features__feature feature--1\">\n          <h2>Sponsors</h2>\n          {\n           Object.values(sponsors).map( (sponsor) => {\n            return (<div key={sponsor}><h3>{sponsor}</h3></div>)\n          })\n          }\n          <h3 className=\"feature__title stat\">\n          <CountTo to= {parseFloat(matchingFund)/1000000000000000000} speed={1000} digits={2} />\n          </h3>\n          <p className=\"features__paragraph u\">\n          Ethers funded till date to matching pool.\n        </p>\n      <button className=\"hero__cta cta arch spo\" onClick={donateEth}>Become a sponsor</button>\n        </div>\n      </div>\n    </div>\n  </section>           \n        <Footer />\n      <ToastsContainer store={ToastsStore}/>\n        </div>\n    )\n}\n\nexport default Sponsors;"]},"metadata":{},"sourceType":"module"}